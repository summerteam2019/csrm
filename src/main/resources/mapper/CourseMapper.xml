<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kb.csrm.course.mapper.CourseMapper">
    <resultMap id="BaseResultMap" type="com.kb.csrm.course.dto.CourseDto">
        <result column="course_id" property="courseId" jdbcType="INTEGER" />
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
        <result column="college_id" property="collegeId" jdbcType="INTEGER" />
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
        <result column="course_name" property="courseName" jdbcType="VARCHAR" />
        <result column="course_introduce" property="courseIntroduce" jdbcType="VARCHAR" />
        <result column="course_time" property="courseTime" jdbcType="VARCHAR" />
        <result column="course_rate" property="courseRate" jdbcType="INTEGER" />
        <result column="course_count" property="courseCount" jdbcType="INTEGER" />
    </resultMap>

    <insert id="insertCourse"  parameterType="com.kb.csrm.course.dto.CourseDto">
        insert into course(
        course_name,
        teacher_name,
        course_introduce,
        course_time
        )values (
        #{courseName},
        #{teacherName},
        #{courseIntroduce},
        #{courseTime})
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into course(
        course_name,
        teacher_name,
        course_introduce,
        college_id)
        <foreach collection="list" item="item" separator="union all">
            (SELECT
            #{item.courseName},
            #{item.teacherName},
            #{item.courseIntroduce},
            9999
            from dual)
        </foreach>
    </insert>

    <select id="selectCourseById" parameterType="double" resultMap="BaseResultMap">
        SELECT *
        FROM course
        WHERE course_id = #{courseId}
    </select>

    <delete id="deleteCourseById" parameterType="com.kb.csrm.course.dto.CourseDto"  >
        delete from course
        where course_id = #{courseId}
    </delete>
    <update id="updateCourseById" parameterType="com.kb.csrm.course.dto.CourseDto" >
        update course
        set
        course_name=#{courseName},
        teacher_name=#{teacherName},
        where course_id = #{courseId}
    </update>


    <select id="getCourseByKeyWord" parameterType="String" resultMap="BaseResultMap">
        select *
        from course
        where course_name LIKE CONCAT('%',#{courseName},'%')
    </select>

    <select id="getCollegeName" parameterType="com.kb.csrm.course.dto.CourseDto" resultType="String">
        select college_name
        from college
        where college_id = #{collegeId}
    </select>

    <select id="getAllCourse" resultMap="BaseResultMap">
        select *
        from course
    </select>

    <select id="getRecommend" resultType="com.kb.csrm.course.dto.CourseDto">
        SELECT
        course_id,
        teacher_name,
        course_name,
        course_rate
        FROM course
        WHERE recommend = 1
    </select>

    <select id="getHighCount" parameterType="int" resultType="com.kb.csrm.course.dto.CourseDto">
        SELECT
        course_id,
        teacher_name,
        course_name,
        course_rate
        FROM course
        ORDER BY course_count
        LIMIT #{num}
    </select>

</mapper>